
.logo-and-nav {
    margin-bottom: 3rem;
 }
 
 .logo-and-nav__logo {background: rgb(64, 203, 177); margin:0; padding:0; color: white; padding: 20px; text-transform:uppercase;}
 .logo-and-nav__links {background:#555; padding: 20px; margin:0; padding:0; display:flex; list-style-type: none; flex-wrap:wrap; }
 .logo-and-nav__links li {flex:1; display:flex; border-right:1px solid #444; justify-content: center;}
 .logo-and-nav__links a {display: block; color:white; text-decoration: none; padding: 20px;}
 .logo-and-nav__links a {font-family: Times New Roman; }

.big-header {
    background-color:rgb(64, 203, 177);
    min-height: 50vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background-image: .hero.png
    background-size: wrapper;
    background-blend-mode: multiply;
    background-repeat: no-repeat;
    background-position:center center;
}

.big-header__content {
    text-align: center;
    color: rgb(255, 255, 255);
    text-shadow: 0 0 5px rgba(0,0,0,0.5);
}

/* this .content-column code is common to a lot of these patterns */

.content-column {
    padding: 40px 20px; 
}

.content-column__content {
    max-width: 700px;
    margin: 0 auto;
}

/* you can use the .editable-text class to modify the typography for the standard column of content */

.editable-text img {margin: 1rem 0;}
.editable-text h2 {margin:0; padding: 1rem 0 0.35rem 0; color:rgb(64, 203, 177);}
.editable-text h3 {margin:0; padding: 1rem 0 0.35rem 0; color:rgb(64, 203, 177);}
.editable-text p {margin:0; padding: 0 0 1rem 0;}
/* end .content-column code */

/* let's not have a grid at small screen sizes: just take care of the typography and white space */

.grid-layout {
    padding: 40px;
}

.grid-layout h2 {
    font-size: 2rem;
    line-height: 1;
    margin: 0;
    padding: 0 0 2rem 0;
}

.grid-layout h3 {
    margin: 0;
    padding: 1rem 0 0.2rem 0;
}

.grid-layout p {
    margin: 0;
    padding: 0 0 0.5rem 0;
}

.grid-layout img {
    display: block;
    margin-bottom: 1rem;
}

.ratings-and-more,
.address {
    padding-top: 2rem;
}

.ratings-and-more h3,
.address h3 {
    color: #666;
}

.ratings-and-more ul {
    margin: 0;
    padding: 0;
    list-style-type: none;
}

.ratings-and-more li {
    border-top: 1px solid #ccc;
    padding: 0.5rem 0;
}

.ratings-and-more h4,
.address h4,
.ratings-and-more p {
    margin: 0;
    padding: 0;
}


/* OK, let's turn the grid on at our 700px breakpoint. You will probably need a different breakpoint. */


/* see https://css-tricks.com/snippets/css/complete-guide-grid/ to figure out how to control the grid */

@media screen and (min-width: 700px) {
    .grid-layout {
        display: grid;
        max-width: 1280px;
        margin: 0 auto;
        /* create a gap between grid columns and rows */
        grid-gap: 2rem;
        /* 7 column grid */
        grid-template-columns: repeat(7, 1fr);
        /* you can set grid-template-rows but a lot of the time the content does a good enough job */
    }
    /* h2 goes all the way across */
    .grid-layout h2 {
        grid-row: 1/1;
        grid-column: 1/-1;
    }
    /* fit our images into the grid */
    .grid-layout img {
        grid-row: 2/4;
        grid-column: 1/5;
        margin: 0;
        align-self: start;
        /* 'pack' images together */
    }
    .grid-layout img+img {
        grid-row: 2/3;
        grid-column: 5/8;
    }
    .grid-layout img+img+img {
        grid-row: 3/4;
        grid-column: 5/7;
    }
    /* fit our content into the grid - in a different order to the original source code. Turn off any white space that we used for the mobile view that doesn't work here. */
    .grid-layout .text-content {
        grid-row: 4;
        grid-column: 1/4;
    }
    .grid-layout .address {
        grid-row: 4;
        grid-column: 7/8;
        padding-top: 0;
    }
    .grid-layout .address h3 {
        margin: 0;
        padding: 0;
    }
    .grid-layout .ratings-and-more {
        grid-row: 4;
        grid-column: 5/7;
        padding-top: 0;
    }
}

/* the CSS for both of these text and image patterns is the same */

.text-image__container {
    max-width: 1280px;
    margin: 3rem auto;
    padding: 1rem;
}

@media screen and (min-width:700px) {
    .text-image__container {
        display: flex;
        align-items: center;
    }
}

.left .text-image__text {
    order: 1;
}

.text-image__text {
    flex: 1;
}

.text-image__content {
    flex: 1;
}

.text-image__content a {
    display: inline-block;
    padding: 10px 30px;
    border-radius: 0.3rem;
    background: rgb(64, 203, 177);
    margin-top: 1rem;
    color: white;
    text-decoration: none;
    font-weight: bold;
}

/* the CSS for both of these text and image patterns is the same */

.text-image__container {
    max-width: 1280px;
    margin: 3rem auto;
    padding: 1rem;
}

@media screen and (min-width:700px) {
    .text-image__container {
        display: flex;
        align-items: center;
    }
}

@media screen and (min-width:700px) {
    .text-image__text {
        flex: 1;
    }
    .left .text-image__text {
        order: 1;
    }
    .text-image__text,
    .left .text-image__text {
        padding: 0 2rem;
    }
}

.text-image__content {
    flex: 1;
}

.text-image__content a {
    display: inline-block;
    padding: 10px 30px;
    border-radius: 0.3rem;
    background: red;
    margin-top: 1rem;
    color: white;
    text-decoration: none;
    font-weight: bold;
}

.page-footer {
    background: rgb(64, 203, 177);
    min-height: 18px;
    padding: 15px;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color:white;
}

.page-footer a {color: white;}

.page-footer .social-media {
    display: flex;
    list-style-type: none ;
}

.page-footer .social-media li {
    padding: 0 1rem;
}